import asyncio

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart, Text

from keyboards.default.menu_markup import main_menu
from keyboards.inline.link_markup import link

import utils.db_api.commands.customers as cs
from loader import dp


@dp.message_handler(CommandStart())
async def start_cmd(message: types.Message):
        deep_link = message.get_args()

        await cs.add_customer(telegram_id=message.from_user.id)

        photo = 'AgACAgIAAxkBAAIC-WISndFP2HL-nK6SFVKQBgZRPN5sAAIEuTEb1rCYSEQtrmGZLBmCAQADAgADeQADIwQ'

        if deep_link == '':
            await message.answer_photo(photo,
                                       caption='üôã‚Äç‚ôÄ–ü–æ—Ä–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ç–≤–æ–∏ –∑–∞–≤–∏—Å–∏–º—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å —Ç—É—à—å—é, –∏ —è —Ç–µ–±–µ –≤ —ç—Ç–æ–º –ø–æ–º–æ–≥—É!\n'
                                               'üôÜ‚Äç‚ôÄ–í—ã–±–∏—Ä–∞–π —Å–∫–æ—Ä–µ–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è, –ø–æ–∫–∞ –≤—Å—ë –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª–∏!',
                                       reply_markup=main_menu)
        else:
            referral_name = await cs.get_referral_name(telegram_id=deep_link)
            await cs.insert_referral_name(telegram_id=message.from_user.id, referral_id=deep_link,
                                          referral_name=referral_name)
            await message.answer_photo(photo,
                                       caption='üôã‚Äç‚ôÄ–ü–æ—Ä–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ç–≤–æ–∏ –∑–∞–≤–∏—Å–∏–º—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å —Ç—É—à—å—é, –∏ —è —Ç–µ–±–µ –≤ —ç—Ç–æ–º –ø–æ–º–æ–≥—É!\n'
                                               'üôÜ‚Äç‚ôÄ–í—ã–±–∏—Ä–∞–π —Å–∫–æ—Ä–µ–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è, –ø–æ–∫–∞ –≤—Å—ë –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª–∏!\n\n'
                                               'üë©‚Äçüíª–í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.\n'
                                               f'üíÅ‚Äç‚ôÄ–ò–º—è –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ - {referral_name}',
                                       reply_markup=main_menu)



@dp.message_handler(Text(equals='–ì–¥–µ –Ω–∞—Å –Ω–∞–π—Ç–∏'))
async def location(message: types.Message):
    photo = 'AgACAgIAAxkBAAID1mITlDh6DPc7Dsmt0xXWLnOr16YcAAKduTEbg_2ZSNTPGnt1-IOJAQADAgADeQADIwQ'
    await message.answer_photo(photo, 'üôÜ‚Äç‚ôÄ–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å –Ω–∞–π—Ç–∏ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É:\n'
                                      '–≥. –¢–≤–µ—Ä—å, –ü—Ä-—Ç –ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ 28/2, –ë–¶ –¢–≤–µ—Ä—å–≥–µ–æ—Ñ–∏–∑–∏–∫–∞, 1 –ø–æ–¥—ä–µ–∑–¥, 3 —ç—Ç–∞–∂, 315 –∫–∞–±–∏–Ω–µ—Ç')
    await asyncio.sleep(0.5)
    await message.answer_location(latitude='56.845135',
                                  longitude='35.904791')


@dp.message_handler(Text(equals='–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ'))
async def portfolio(message: types.Message):
    photo = 'AgACAgIAAxkBAAID2GITlFyPqfFVLK-hZmPXtSEH_ixPAAKeuTEbg_2ZSIF8GTODfd1_AQADAgADeQADIwQ'
    await message.answer_photo(photo, 'üôÜ‚Äç‚ôÄ–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
                               reply_markup=link)
    await message.answer(message.photo.file_id[-1])
